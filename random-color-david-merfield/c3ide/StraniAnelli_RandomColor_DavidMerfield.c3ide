{"Id":"1b7bbbce-150d-46a6-a4ae-3e6721dab6c0","Name":"Random Color (David Merfield)","Class":"RandomColor_DavidMerfield","Company":"StraniAnelli","Author":"StraniAnelli","AddonId":"StraniAnelli_RandomColor_DavidMerfield","Description":"A tiny script for generating attractive colors.","AddonFolder":"C:\\Users\\el3um\\AppData\\Roaming\\C3IDE_DATA\\Server\\Test\\randomcolor_davidmerfield","AddonCategory":"general","MajorVersion":1,"MinorVersion":0,"RevisionVersion":0,"BuildVersion":0,"Type":0,"TypeName":"(Plugin)","IconXml":"<svg height=\"512pt\" viewBox=\"0 0 512 512\" width=\"512pt\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"m0 256c0-141.386719 114.613281-256 256-256s256 114.613281 256 256-114.613281 256-256 256-256-114.613281-256-256zm256 153.085938c84.546875 0 153.085938-68.539063 153.085938-153.085938s-68.539063-153.085938-153.085938-153.085938-153.085938 68.539063-153.085938 153.085938 68.539063 153.085938 153.085938 153.085938zm0 0\" fill=\"#83d9ff\"/><path d=\"m256 512v-102.914062c19.542969 0 38.21875-3.65625 55.402344-10.332032l35.210937 96.742188c-28.175781 10.664062-58.707031 16.503906-90.613281 16.503906zm0 0\" fill=\"#3fefef\"/><path d=\"m311.402344 398.753906c17.6875-6.871094 33.789062-16.9375 47.59375-29.496094l66.191406 78.871094c-22.921875 20.191406-49.480469 36.355469-78.574219 47.367188zm0 0\" fill=\"#1dd1d9\"/><path d=\"m358.996094 369.257812c13.660156-12.433593 25.066406-27.300781 33.53125-43.925781l89.203125 51.507813c-14.492188 27.03125-33.714844 51.167968-56.546875 71.289062zm0 0\" fill=\"#17b5ba\"/><path d=\"m404.890625 220.261719 101.472656-17.894531c3.699219 17.296874 5.636719 35.234374 5.636719 53.632812 0 11.949219-.824219 23.703125-2.410156 35.222656l-101.472656-17.882812c.636718-5.6875.96875-11.476563.96875-17.339844 0-12.3125-1.453126-24.269531-4.195313-35.738281zm0 0\" fill=\"#9be058\"/><path d=\"m384.300781 172.441406 89.210938-51.507812c15.339843 24.664062 26.609375 52.117187 32.851562 81.433594l-101.472656 17.894531c-4.128906-17.265625-11.175781-33.386719-20.589844-47.820313zm0 0\" fill=\"#c0ff66\"/><path d=\"m349.652344 134.902344 66.191406-78.882813c22.703125 18.171875 42.246094 40.128907 57.667969 64.914063l-89.210938 51.507812c-9.386719-14.371094-21.121093-27.0625-34.648437-37.539062zm0 0\" fill=\"#ffdf46\"/><path d=\"m171.484375 14.289062c26.464844-9.261718 54.898437-14.289062 84.515625-14.289062v102.914062c-17.257812 0-33.839844 2.855469-49.316406 8.117188zm0 0\" fill=\"#fc3e81\"/><path d=\"m96.15625 56.019531c22.347656-17.882812 47.757812-32.097656 75.316406-41.730469h.011719l35.199219 96.742188c-16.164063 5.492188-31.109375 13.621094-44.335938 23.871094zm0 0\" fill=\"#f01054\"/><path d=\"m38.488281 120.933594c15.421875-24.785156 34.964844-46.738282 57.667969-64.914063l66.191406 78.882813c-13.527344 10.476562-25.261718 23.167968-34.644531 37.539062zm0 0\" fill=\"#7884ea\"/><path d=\"m2.410156 291.222656 101.472656-17.882812c2.09375 18.53125 7.488282 36.066406 15.589844 51.992187l-89.207031 51.507813c-14.03125-26.15625-23.652344-55.023438-27.855469-85.617188zm0 0\" fill=\"#1685fb\"/><path d=\"m30.265625 376.839844 89.203125-51.507813c8.46875 16.625 19.875 31.492188 33.535156 43.925781l-66.191406 78.871094c-22.828125-20.121094-42.050781-44.257812-56.546875-71.289062zm0 0\" fill=\"#43a3f9\"/><path d=\"m86.8125 448.128906 66.191406-78.871094c13.800782 12.558594 29.902344 22.625 47.59375 29.496094l-35.214844 96.742188c-29.089843-11.011719-55.648437-27.175782-78.570312-47.367188zm0 0\" fill=\"#64bdff\"/><path d=\"m5.636719 202.367188c6.242187-29.316407 17.511719-56.769532 32.851562-81.433594l89.210938 51.507812c-9.414063 14.433594-16.460938 30.554688-20.589844 47.820313zm0 0\" fill=\"#4a5be5\"/><path d=\"m392.53125 325.332031c8.097656-15.929687 13.492188-33.460937 15.585938-51.992187l101.472656 17.882812c-4.203125 30.59375-13.824219 59.460938-27.855469 85.617188zm0 0\" fill=\"#1cc939\"/><path d=\"m0 256c0-18.398438 1.9375-36.335938 5.636719-53.632812l101.472656 17.894531c-2.742187 11.46875-4.195313 23.425781-4.195313 35.738281 0 5.863281.332032 11.652344.96875 17.339844l-101.472656 17.882812c-1.585937-11.519531-2.410156-23.273437-2.410156-35.222656zm0 0\" fill=\"#364ec6\"/><path d=\"m305.316406 111.03125 35.210938-96.742188c27.558594 9.632813 52.972656 23.847657 75.316406 41.734376l-66.1875 78.878906c-13.230469-10.25-28.179688-18.378906-44.339844-23.871094zm0 0\" fill=\"#f9b200\"/><path d=\"m256 102.914062v-102.914062c29.617188 0 58.0625 5.027344 84.527344 14.289062l-35.214844 96.742188c-15.472656-5.261719-32.054688-8.117188-49.3125-8.117188zm0 0\" fill=\"#fd6096\"/></svg>","IconImage":"System.Windows.Media.Imaging.BitmapImage","CreateDate":"2019-05-10T12:48:40","LastModified":"2019-05-18T19:45:27.4190445+02:00","ChangeDate":"2019-05-18, 07:45","AddonJson":"{\r\n  \"is-c3-addon\": true,\r\n  \"type\": \"plugin\",\r\n  \"name\": \"Random Color (David Merfield)\",\r\n  \"id\": \"StraniAnelli_RandomColor_DavidMerfield\",\r\n  \"version\": \"1.0.0.0\",\r\n  \"author\": \"StraniAnelli\",\r\n  \"website\": \"https://el3um4s.github.io/construct-random-color-david-merfield-plugin/\",\r\n  \"documentation\": \"https://el3um4s.github.io/construct-random-color-david-merfield-plugin/\",\r\n  \"description\": \"A tiny script for generating attractive colors.\",\r\n  \"editor-scripts\": [\r\n    \"plugin.js\",\r\n    \"type.js\",\r\n    \"instance.js\"\r\n  ],\r\n  \"file-list\": [\r\n    \"c3runtime/plugin.js\",\r\n    \"c3runtime/type.js\",\r\n    \"c3runtime/instance.js\",\r\n    \"c3runtime/conditions.js\",\r\n    \"c3runtime/actions.js\",\r\n    \"c3runtime/expressions.js\",\r\n    \"lang/en-US.json\",\r\n    \"aces.json\",\r\n    \"addon.json\",\r\n    \"icon.svg\",\r\n    \"instance.js\",\r\n    \"plugin.js\",\r\n    \"type.js\",\r\n    \"c3runtime/randomColor.js\",\r\n    \"c3runtime/randomColor_Utility.js\",\r\n    \"c3runtime/utility.js\"\r\n  ]\r\n}","PluginEditTime":"\"use strict\";\r\n{\r\n\r\n    const PLUGIN_ID = \"StraniAnelli_RandomColor_DavidMerfield\";\r\n    const PLUGIN_VERSION = \"1.0.0.0\";\r\n    const PLUGIN_CATEGORY = \"general\";\r\n\r\n    const PLUGIN_CLASS = SDK.Plugins.StraniAnelli_RandomColor_DavidMerfield = class RandomColor_DavidMerfieldPlugin extends SDK.IPluginBase\r\n    {\r\n        constructor()\r\n        {\r\n            super(PLUGIN_ID);\r\n\r\n            SDK.Lang.PushContext(\"plugins.\" + PLUGIN_ID.toLowerCase());\r\n\r\n            this._info.SetName(lang(\".name\"));\r\n            this._info.SetDescription(lang(\".description\"));\r\n            this._info.SetVersion(PLUGIN_VERSION);\r\n            this._info.SetCategory(PLUGIN_CATEGORY);\r\n            this._info.SetAuthor(\"StraniAnelli\");\r\n            this._info.SetHelpUrl(lang(\".help-url\"));\r\n            this._info.SetIsSingleGlobal(true);\r\n\r\n            this._info.SetSupportedRuntimes([\"c3\"]);\r\n\r\n            SDK.Lang.PushContext(\".properties\");\r\n\r\n            this._info.SetProperties([\r\n                new SDK.PluginProperty(\"text\", \"hue\", \"\"),\r\n                new SDK.PluginProperty(\"combo\", \"luminosity\", {\r\n                \"initialValue\": \"random\",\r\n                \"items\": [\"random\", \"bright\", \"light\", \"dark\"]\r\n            }),\r\n                new SDK.PluginProperty(\"integer\", \"count\", 1),\r\n                new SDK.PluginProperty(\"text\", \"seed\", \"\"),\r\n                new SDK.PluginProperty(\"combo\", \"format\",{\r\n                \"initialValue\": \"hex\",\r\n                \"items\": [\"rgb\", \"rgba\", \"rgbArray\", \"hsl\", \"hsla\", \"hslArray\", \"hex\"]\r\n            }),\r\n                new SDK.PluginProperty(\"percent\", \"alpha\", 0)\r\n            ]);\r\n\r\n            this._info.AddFileDependency(\r\n            {\r\n                filename: \"c3runtime/randomColor.js\",\r\n                type: \"inline-script\"\r\n            });\r\n            this._info.AddFileDependency(\r\n            {\r\n                filename: \"c3runtime/randomColor_Utility.js\",\r\n                type: \"inline-script\"\r\n            });\r\n            this._info.AddFileDependency(\r\n            {\r\n                filename: \"c3runtime/utility.js\",\r\n                type: \"inline-script\"\r\n            });\r\n\r\n\r\n            SDK.Lang.PopContext(); //.properties\r\n            SDK.Lang.PopContext();\r\n        }\r\n    };\r\n\r\n    PLUGIN_CLASS.Register(PLUGIN_ID, PLUGIN_CLASS);\r\n}\r\n","PluginRunTime":"\"use strict\";\r\n{\r\n\tC3.Plugins.StraniAnelli_RandomColor_DavidMerfield = class RandomColor_DavidMerfieldPlugin extends C3.SDKPluginBase\r\n\t{\r\n\t\tconstructor(opts)\r\n\t\t{\r\n\t\t\tsuper(opts);\r\n\t\t}\r\n\t\t\r\n\t\tRelease()\r\n\t\t{\r\n\t\t\tsuper.Release();\r\n\t\t}\r\n\t};\r\n}\r\n","TypeEditTime":"\"use strict\";\r\n{\r\n\tconst PLUGIN_CLASS = SDK.Plugins.StraniAnelli_RandomColor_DavidMerfield;\r\n\t\r\n\tPLUGIN_CLASS.Type = class RandomColor_DavidMerfieldType extends SDK.ITypeBase\r\n\t{\r\n\t\tconstructor(sdkPlugin, iObjectType)\r\n\t\t{\r\n\t\t\tsuper(sdkPlugin, iObjectType);\r\n\t\t}\r\n\t};\r\n}\r\n","TypeRunTime":"\"use strict\";\r\n{\r\n\tC3.Plugins.StraniAnelli_RandomColor_DavidMerfield.Type = class RandomColor_DavidMerfieldType extends C3.SDKTypeBase\r\n\t{\r\n\t\tconstructor(objectClass)\r\n\t\t{\r\n\t\t\tsuper(objectClass);\r\n\t\t}\r\n\t\t\r\n\t\tRelease()\r\n\t\t{\r\n\t\t\tsuper.Release();\r\n\t\t}\r\n\t\t\r\n\t\tOnCreate()\r\n\t\t{\t\r\n\t\t}\r\n\t};\r\n}\r\n","InstanceEditTime":"\"use strict\";\r\n{\r\n\tconst PLUGIN_CLASS = SDK.Plugins.StraniAnelli_RandomColor_DavidMerfield;\r\n\t\r\n\tPLUGIN_CLASS.Instance = class RandomColor_DavidMerfieldInstance extends SDK.IInstanceBase\r\n\t{\r\n\t\tconstructor(sdkType, inst)\r\n\t\t{\r\n\t\t\tsuper(sdkType, inst);\r\n\t\t}\r\n\t\t\r\n\t\tRelease()\r\n\t\t{\r\n\t\t}\r\n\t\t\r\n\t\tOnCreate()\r\n\t\t{\r\n\t\t}\r\n\t\t\r\n\t\tOnPropertyChanged(id, value)\r\n\t\t{\r\n\t\t}\r\n\t\t\r\n\t\tLoadC2Property(name, valueString)\r\n\t\t{\r\n\t\t\treturn false;\t\t// not handled\r\n\t\t}\r\n\t};\r\n}\r\n","InstanceRunTime":"\"use strict\";\r\n{\r\n\tC3.Plugins.StraniAnelli_RandomColor_DavidMerfield.Instance = class RandomColor_DavidMerfieldInstance extends C3.SDKInstanceBase\r\n\t{\r\n\t\tconstructor(inst, properties)\r\n\t\t{\r\n\t\t\tsuper(inst);\r\n\t\t\t\r\n\t\t\tthis.options = {\r\n\t\t\t\thue: \"\",\r\n\t\t\t\tluminosity: \"random\",\r\n\t\t\t\tcount: 1,\r\n\t\t\t\tseed: \"\",\r\n\t\t\t\tformat: \"hex\",\r\n\t\t\t\talpha: 0\t\t\t\t\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tconst tempRandomColor = randomColor();\r\n\t\t\tthis.lastColor = tempRandomColor[0];\r\n\t\t\tthis.lastColorsArray = tempRandomColor;\r\n\t\t\t\r\n\t\t\tthis.lastFormat = \"hex\";\r\n\t\t\t\r\n\t\t\tif (properties)\r\n\t\t\t{\r\n\t\t\t\tthis.options.hue = properties[0];\r\n\t\t\t\tthis.options.luminosity = getComboLuminosity(properties[1]);\r\n\t\t\t\tthis.options.count = properties[2];\r\n\t\t\t\tthis.options.seed = properties[3];\r\n\t\t\t\tthis.options.format = getComboFormat(properties[4]);\r\n\t\t\t\tthis.options.alpha = properties[5];\r\n\t\t\t\tthis.lastFormat = this.options.format;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tRelease()\r\n\t\t{\r\n\t\t\tsuper.Release();\r\n\t\t}\r\n\t\t\r\n\t\tSaveToJson()\r\n\t\t{\r\n\t\t\treturn {\r\n\t\t\t\t// data to be saved for savegames\r\n\t\t\t};\r\n\t\t}\r\n\t\t\r\n\t\tLoadFromJson(o)\r\n\t\t{\r\n\t\t\t// load state for savegames\r\n\t\t}\r\n\t};\r\n}\r\n","LanguageProperties":"\"properties\": {\r\n    \"hue\": {\r\n      \"name\": \"Hue\",\r\n      \"desc\": \"Controls the hue of the generated color. You can pass a string representing a color name: red, orange, yellow, green, blue, purple, pink and monochrome are currently supported. If you pass a hexidecimal color string such as #00FFFF, randomColor will extract its hue value and use that to generate colors.\"\r\n    },\r\n    \"luminosity\": {\r\n      \"name\": \"Luminosity\",\r\n      \"desc\": \"Controls the luminosity of the generated color. You can specify a string containing bright, light or dark.\",\r\n      \"items\": {\r\n        \"random\": \"random\",\r\n        \"bright\": \"bright\",\r\n        \"light\": \"light\",\r\n        \"dark\": \"dark\"\r\n      }\r\n    },\r\n    \"count\": {\r\n      \"name\": \"Count\",\r\n      \"desc\": \"An integer which specifies the number of colors to generate.\"\r\n    },\r\n    \"seed\": {\r\n      \"name\": \"Seed\",\r\n      \"desc\": \"An integer or string which when passed will cause randomColor to return the same color each time.\"\r\n    },\r\n    \"format\": {\r\n      \"name\": \"Format\",\r\n      \"desc\": \"A string which specifies the format of the generated color. Possible values are rgb, rgba, rgbArray, hsl, hsla, hslArray and hex (default).\",\r\n      \"items\": {\r\n        \"rgb\": \"rgb\",\r\n        \"rgba\": \"rgba\",\r\n        \"rgbArray\": \"rgbArray\",\r\n        \"hsl\": \"hsl\",\r\n        \"hsla\": \"hsla\",\r\n        \"hslArray\": \"hslArray\",\r\n        \"hex\": \"hex\"\r\n      }\r\n    },\r\n    \"alpha\": {\r\n      \"name\": \"Alpha\",\r\n      \"desc\": \"A decimal between 0 and 1. Only relevant when using a format with an alpha channel (rgba and hsla). Defaults to a random value.\"\r\n    }\r\n  }\r\n","LanguageCategories":"\"aceCategories\": {\r\n    \"one color\" : \"One Color\",\r\n    \"color array\" : \"Color Array\",\r\n    \"set properties\" : \"Set Properties\",\r\n    \"c3array\" : \"C3 Array\",\r\n    \"c3 sprite\" : \"C3 Sprite\",\r\n    \"get properties\" : \"Get Properties\"\r\n}\r\n","Effect":null,"ThemeCss":null,"ThemeLangauge":null,"Categories":["one color","color array","set properties","c3array","c3 sprite","get properties"],"Actions":{"generaterandomcolor":{"Id":"generaterandomcolor","Category":"one color","ScriptName":"Generaterandomcolor","Ace":"{\r\n\t\"id\": \"generateRandomColor\",\r\n\t\"scriptName\": \"generateRandomColor\",\r\n\t\"highlight\": false\r\n}\r\n","DisplayText":null,"Description":null,"Highlight":null,"Language":"\"generateRandomColor\": {\r\n\t\"list-name\": \"generateRandomColor\",\r\n\t\"display-text\": \"Generate a random color\",\r\n\t\"description\": \"Generate a random color\"\r\n}\r\n","Code":"generateRandomColor()\r\n{\r\n\tthis.options.count = 1;\r\n\t\r\n\tlet constantSeed = null;\r\n\t\r\n\tif (this.options.hasOwnProperty(\"seed\") && !this.options.seed.replace(/\\s/g, '').length) {\r\n\t\tdelete this.options.seed;\r\n\t} else {\r\n\t\tconstantSeed = this.options.seed;\r\n\t}\r\n\t\r\n\tconst color = randomColor(this.options);\r\n\tthis.lastColor = color[0];\r\n\tthis.lastColorsArray = color;\r\n\t\r\n\tif (this.options.hasOwnProperty(\"seed\")) {\r\n\t\tthis.options.seed = constantSeed;\r\n\t}\r\n}\r\n","ListName":null,"Async":null,"C2Id":"","Deprecated":""},"generaterandomcolorarray":{"Id":"generaterandomcolorarray","Category":"color array","ScriptName":"Generaterandomcolorarray","Ace":"{\r\n\t\"id\": \"generateRandomColorArray\",\r\n\t\"scriptName\": \"generateRandomColorArray\",\r\n\t\"highlight\": true\r\n}\r\n","DisplayText":null,"Description":null,"Highlight":null,"Language":"\"generateRandomColorArray\": {\r\n\t\"list-name\": \"generateRandomColorArray\",\r\n\t\"display-text\": \"Generate an array of random colors\",\r\n\t\"description\": \"Generate an array of random colors.\"\r\n}\r\n","Code":"generateRandomColorArray()\r\n{\r\n\tthis.options.count = this.options.count <= 1 ? 1 : this.options.count;\r\n\t\r\n\tlet constantSeed = null;\r\n\t\r\n\tif (this.options.hasOwnProperty(\"seed\") && !this.options.seed.replace(/\\s/g, '').length) {\r\n\t\tdelete this.options.seed;\r\n\t} else {\r\n\t\tconstantSeed = this.options.seed;\r\n\t}\r\n\t\r\n\tconst colors = randomColor(this.options);\r\n\t\r\n\tthis.lastColor = colors[0];\r\n\tthis.lastColorsArray = colors;\r\n\t\r\n\tif (this.options.hasOwnProperty(\"seed\")) {\r\n\t\tthis.options.seed = constantSeed;\r\n\t}\r\n}\r\n","ListName":null,"Async":null,"C2Id":"","Deprecated":""},"setpropertyhue":{"Id":"setpropertyhue","Category":"set properties","ScriptName":"Setpropertyhue","Ace":"{\r\n  \"id\": \"setPropertyHue\",\r\n  \"scriptName\": \"setPropertyHue\",\r\n  \"highlight\": false,\r\n  \"params\": [\r\n    {\r\n      \"id\": \"prop\",\r\n      \"type\": \"string\",\r\n      \"initialValue\": \"random\"\r\n    }\r\n  ]\r\n}\r\n","DisplayText":null,"Description":null,"Highlight":null,"Language":"\"setPropertyHue\": {\r\n\t\"list-name\": \"setPropertyHue\",\r\n\t\"display-text\": \"Set hue to {0}\",\r\n\t\"description\": \"Set the hue of the generated color\",\r\n\t\"params\": {\r\n        \"prop\": {\r\n            \"name\": \"Hue\",\r\n            \"desc\": \"Controls the hue of the generated color.\"\r\n        }\r\n    }\r\n}\r\n","Code":"setPropertyHue(prop)\r\n{\r\n\tthis.options.hue = prop;\r\n}\r\n","ListName":null,"Async":null,"C2Id":"","Deprecated":""},"setpropertycount":{"Id":"setpropertycount","Category":"set properties","ScriptName":"Setpropertycount","Ace":"{\r\n  \"id\": \"setPropertyCount\",\r\n  \"scriptName\": \"setPropertyCount\",\r\n  \"highlight\": false,\r\n  \"params\": [\r\n    {\r\n      \"id\": \"prop\",\r\n      \"type\": \"number\",\r\n      \"initialValue\": \"1\"\r\n    }\r\n  ]\r\n}\r\n","DisplayText":null,"Description":null,"Highlight":null,"Language":"\"setPropertyCount\": {\r\n\t\"list-name\": \"setPropertyCount\",\r\n\t\"display-text\": \"Set count to {0}\",\r\n\t\"description\": \"Set the number of colors to generate.\",\r\n\t\"params\": {\r\n        \"prop\": {\r\n            \"name\": \"Count\",\r\n            \"desc\": \"An integer which specifies the number of colors to generate.\"\r\n        }\r\n    }\r\n}\r\n","Code":"setPropertyCount(prop)\r\n{\r\n\tthis.options.count = prop;\r\n}\r\n","ListName":null,"Async":null,"C2Id":"","Deprecated":""},"setpropertyluminosity":{"Id":"setpropertyluminosity","Category":"set properties","ScriptName":"Setpropertyluminosity","Ace":"{\r\n  \"id\": \"setPropertyLuminosity\",\r\n  \"scriptName\": \"setPropertyLuminosity\",\r\n  \"highlight\": false,\r\n  \"params\": [\r\n    {\r\n      \"id\": \"prop\",\r\n      \"type\": \"combo\",\r\n      \"initialValue\": \"random\",\r\n      \"items\": [\r\n        \"random\",\r\n        \"bright\",\r\n        \"light\",\r\n        \"dark\"\r\n      ]\r\n    }\r\n  ]\r\n}\r\n","DisplayText":null,"Description":null,"Highlight":null,"Language":"\"setPropertyLuminosity\": {\r\n    \"list-name\": \"setPropertyLuminosity\",\r\n    \"display-text\": \"Set luminosity to {0}\",\r\n    \"description\": \"Set the luminosity of the generated color\",\r\n    \"params\": {\r\n      \"prop\": {\r\n        \"name\": \"Luminosity\",\r\n        \"desc\": \"The luminosity of the generated color.\",\r\n        \"items\": {\r\n          \"random\": \"random\",\r\n          \"bright\": \"bright\",\r\n          \"light\": \"light\",\r\n          \"dark\": \"dark\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n","Code":"setPropertyLuminosity(prop)\r\n{\r\n\tthis.options.luminosity = getComboLuminosity(prop);\r\n}\r\n","ListName":null,"Async":null,"C2Id":"","Deprecated":""},"setpropertyseed":{"Id":"setpropertyseed","Category":"set properties","ScriptName":"Setpropertyseed","Ace":"{\r\n  \"id\": \"setPropertySeed\",\r\n  \"scriptName\": \"setPropertySeed\",\r\n  \"highlight\": false,\r\n  \"params\": [\r\n    {\r\n      \"id\": \"prop\",\r\n      \"type\": \"string\",\r\n      \"initialValue\": \"Hello World!\"\r\n    }\r\n  ]\r\n}\r\n","DisplayText":null,"Description":null,"Highlight":null,"Language":"\"setPropertySeed\": {\r\n\t\"list-name\": \"setPropertySeed\",\r\n\t\"display-text\": \"Set seed to {0}\",\r\n\t\"description\": \"Set the seed of colors to generate.\",\r\n\t\"params\": {\r\n        \"prop\": {\r\n            \"name\": \"Seed\",\r\n            \"desc\": \"A string which when passed will cause randomColor to return the same color each time.\"\r\n        }\r\n    }\r\n}\r\n","Code":"setPropertySeed(prop)\r\n{\r\n\tthis.options.seed = prop;\r\n}\r\n","ListName":null,"Async":null,"C2Id":"","Deprecated":""},"setpropertyalpha":{"Id":"setpropertyalpha","Category":"set properties","ScriptName":"Setpropertyalpha","Ace":"{\r\n  \"id\": \"setPropertyAlpha\",\r\n  \"scriptName\": \"setPropertyAlpha\",\r\n  \"highlight\": false,\r\n  \"params\": [\r\n    {\r\n      \"id\": \"prop\",\r\n      \"type\": \"number\",\r\n      \"initialValue\": \"1\"\r\n    }\r\n  ]\r\n}\r\n","DisplayText":null,"Description":null,"Highlight":null,"Language":"\"setPropertyAlpha\": {\r\n\t\"list-name\": \"setPropertyAlpha\",\r\n\t\"display-text\": \"Set alpha to {0}\",\r\n\t\"description\": \"Set the alpha of color to generate\",\r\n\t\"params\": {\r\n        \"prop\": {\r\n            \"name\": \"Alpha\",\r\n            \"desc\": \"A decimal between 0 and 1. Only relevant when using a format with an alpha channel (rgba and hsla).\"\r\n        }\r\n    }\r\n}\r\n","Code":"setPropertyAlpha(prop)\r\n{\r\n\tthis.options.alpha = prop;\r\n}\r\n","ListName":null,"Async":null,"C2Id":"","Deprecated":""},"setpropertyformat":{"Id":"setpropertyformat","Category":"set properties","ScriptName":"Setpropertyformat","Ace":"{\r\n  \"id\": \"setPropertyFormat\",\r\n  \"scriptName\": \"setPropertyFormat\",\r\n  \"highlight\": false,\r\n  \"params\": [\r\n    {\r\n      \"id\": \"prop\",\r\n      \"type\": \"combo\",\r\n      \"initialValue\": \"hex\",\r\n      \"items\": [\r\n        \"rgb\",\r\n        \"rgba\",\r\n        \"rgbArray\",\r\n        \"hsl\",\r\n        \"hsla\",\r\n        \"hslArray\",\r\n        \"hex\"\r\n      ]\r\n    }\r\n  ]\r\n}\r\n","DisplayText":null,"Description":null,"Highlight":null,"Language":"\"setPropertyFormat\": {\r\n    \"list-name\": \"setPropertyFormat\",\r\n    \"display-text\": \"Set format to {0}\",\r\n    \"description\": \"Set the format of the generated color\",\r\n    \"params\": {\r\n      \"prop\": {\r\n        \"name\": \"Format\",\r\n        \"desc\": \"The format of the generated color.\",\r\n        \"items\": {\r\n          \"rgb\": \"rgb\",\r\n          \"rgba\": \"rgba\",\r\n          \"rgbArray\": \"rgbArray\",\r\n          \"hsl\": \"hsl\",\r\n          \"hsla\": \"hsla\",\r\n          \"hslArray\": \"hslArray\",\r\n          \"hex\": \"hex\"\r\n        }\r\n      }\r\n    }\r\n  }\r\n","Code":"setPropertyFormat(prop)\r\n{\r\n\tthis.options.format = getComboFormat(prop);\r\n\tthis.lastFormat = this.options.format;\r\n}\r\n","ListName":null,"Async":null,"C2Id":"","Deprecated":""},"setallproperties":{"Id":"setallproperties","Category":"set properties","ScriptName":"Setallproperties","Ace":"{\r\n  \"id\": \"setAllProperties\",\r\n  \"scriptName\": \"setAllProperties\",\r\n  \"highlight\": false,\r\n  \"params\": [\r\n    {\r\n      \"id\": \"hue\",\r\n      \"type\": \"string\",\r\n      \"initialValue\": \"random\"\r\n    },\r\n    {\r\n      \"id\": \"luminosity\",\r\n      \"type\": \"combo\",\r\n      \"initialValue\": \"random\",\r\n      \"items\": [\r\n        \"random\",\r\n        \"bright\",\r\n        \"light\",\r\n        \"dark\"\r\n      ]\r\n    },\r\n    {\r\n      \"id\": \"count\",\r\n      \"type\": \"number\",\r\n      \"initialValue\": \"1\"\r\n    },\r\n    {\r\n      \"id\": \"seed\",\r\n      \"type\": \"string\",\r\n      \"initialValue\": \"Hello World!\"\r\n    },\r\n    {\r\n      \"id\": \"format\",\r\n      \"type\": \"combo\",\r\n      \"initialValue\": \"hex\",\r\n      \"items\": [\r\n        \"rgb\",\r\n        \"rgba\",\r\n        \"rgbArray\",\r\n        \"hsl\",\r\n        \"hsla\",\r\n        \"hslArray\",\r\n        \"hex\"\r\n      ]\r\n    },\r\n    {\r\n      \"id\": \"alpha\",\r\n      \"type\": \"number\",\r\n      \"initialValue\": \"1\"\r\n    }\r\n  ]\r\n}\r\n","DisplayText":null,"Description":null,"Highlight":null,"Language":"\"setAllProperties\": {\r\n    \"list-name\": \"setAllProperties\",\r\n    \"display-text\": \"Set properties to hue = {0}, luminosity = {1}, count = {2}, seed = {3}, format = {4}, alpha = {5}\",\r\n    \"description\": \"Set all properties\",\r\n    \"params\": {\r\n      \"hue\": {\r\n        \"name\": \"Hue\",\r\n        \"desc\": \"Controls the hue of the generated color.\"\r\n      },\r\n      \"luminosity\": {\r\n        \"name\": \"Luminosity\",\r\n        \"desc\": \"Controls the hue of the generated color.\",\r\n        \"items\": {\r\n          \"random\": \"random\",\r\n          \"bright\": \"bright\",\r\n          \"light\": \"light\",\r\n          \"dark\": \"dark\"\r\n        }\r\n      },\r\n      \"count\": {\r\n        \"name\": \"Count\",\r\n        \"desc\": \"An integer which specifies the number of colors to generate.\"\r\n      },\r\n      \"seed\": {\r\n        \"name\": \"Seed\",\r\n        \"desc\": \"A string which when passed will cause randomColor to return the same color each time.\"\r\n      },\r\n      \"format\": {\r\n        \"name\": \"Format\",\r\n        \"desc\": \"The format of the generated color.\",\r\n        \"items\": {\r\n          \"rgb\": \"rgb\",\r\n          \"rgba\": \"rgba\",\r\n          \"rgbArray\": \"rgbArray\",\r\n          \"hsl\": \"hsl\",\r\n          \"hsla\": \"hsla\",\r\n          \"hslArray\": \"hslArray\",\r\n          \"hex\": \"hex\"\r\n        }\r\n      },\r\n      \"alpha\": {\r\n        \"name\": \"Alpha\",\r\n        \"desc\": \"A decimal between 0 and 1. Only relevant when using a format with an alpha channel (rgba and hsla).\"\r\n      }\r\n    }\r\n  }\r\n","Code":"setAllProperties(hue, luminosity, count, seed, format, alpha)\r\n{\r\n \tthis.options.hue = hue;\r\n \tthis.options.luminosity = getComboLuminosity(luminosity);\r\n \tthis.options.count = count;\r\n \tthis.options.seed = seed;\r\n \tthis.options.format = getComboFormat(format);\r\n \tthis.options.alpha = alpha;\r\n \t\r\n \tthis.lastFormat = this.options.format;\r\n}\r\n","ListName":null,"Async":null,"C2Id":"","Deprecated":""},"setallpropertiesviastring":{"Id":"setallpropertiesviastring","Category":"set properties","ScriptName":"Setallpropertiesviastring","Ace":"{\r\n  \"id\": \"setAllPropertiesViaString\",\r\n  \"scriptName\": \"setAllPropertiesViaString\",\r\n  \"highlight\": false,\r\n  \"params\": [\r\n    {\r\n      \"id\": \"hue\",\r\n      \"type\": \"string\",\r\n      \"initialValue\": \"random\"\r\n    },\r\n    {\r\n      \"id\": \"luminosity\",\r\n      \"type\": \"string\",\r\n      \"initialValue\": \"random\"\r\n    },\r\n    {\r\n      \"id\": \"count\",\r\n      \"type\": \"number\",\r\n      \"initialValue\": \"1\"\r\n    },\r\n    {\r\n      \"id\": \"seed\",\r\n      \"type\": \"string\",\r\n      \"initialValue\": \"Hello World!\"\r\n    },\r\n    {\r\n      \"id\": \"format\",\r\n      \"type\": \"string\",\r\n      \"initialValue\": \"hex\"\r\n    },\r\n    {\r\n      \"id\": \"alpha\",\r\n      \"type\": \"number\",\r\n      \"initialValue\": \"1\"\r\n    }\r\n  ]\r\n}\r\n","DisplayText":null,"Description":null,"Highlight":null,"Language":"\"setAllPropertiesViaString\": {\r\n    \"list-name\": \"setAllPropertiesViaString\",\r\n    \"display-text\": \"Set properties to hue = {0}, luminosity = {1}, count = {2}, seed = {3}, format = {4}, alpha = {5}\",\r\n    \"description\": \"Set all properties via String\",\r\n    \"params\": {\r\n      \"hue\": {\r\n        \"name\": \"Hue\",\r\n        \"desc\": \"Controls the hue of the generated color.\"\r\n      },\r\n      \"luminosity\": {\r\n        \"name\": \"Luminosity\",\r\n        \"desc\": \"Controls the hue of the generated color.\"\r\n      },\r\n      \"count\": {\r\n        \"name\": \"Count\",\r\n        \"desc\": \"An integer which specifies the number of colors to generate.\"\r\n      },\r\n      \"seed\": {\r\n        \"name\": \"Seed\",\r\n        \"desc\": \"A string which when passed will cause randomColor to return the same color each time.\"\r\n      },\r\n      \"format\": {\r\n        \"name\": \"Format\",\r\n        \"desc\": \"The format of the generated color.\"\r\n      },\r\n      \"alpha\": {\r\n        \"name\": \"Alpha\",\r\n        \"desc\": \"A decimal between 0 and 1. Only relevant when using a format with an alpha channel (rgba and hsla).\"\r\n      }\r\n    }\r\n  }\r\n","Code":"setAllPropertiesViaString(hue, luminosity, count, seed, format, alpha)\r\n{\r\n \tthis.options.hue = hue;\r\n \tthis.options.luminosity = getComboLuminosity(luminosity);\r\n \tthis.options.count = count;\r\n \tthis.options.seed = seed;\r\n \tthis.options.format = getComboFormat(format);\r\n \tthis.options.alpha = alpha;\r\n}\r\n","ListName":null,"Async":null,"C2Id":"","Deprecated":""},"copyrandomcolorstoc3array":{"Id":"copyrandomcolorstoc3array","Category":"c3array","ScriptName":"Copyrandomcolorstoc3array","Ace":"{\r\n  \"id\": \"copyRandomColorsToC3Array\",\r\n  \"scriptName\": \"copyRandomColorsToC3Array\",\r\n  \"highlight\": false,\r\n  \"params\": [\r\n    {\r\n      \"id\": \"c3array\",\r\n      \"type\": \"object\",\r\n      \"allowedPluginIds\": [\r\n        \"Arr\"\r\n      ]\r\n    }\r\n  ]\r\n}\r\n","DisplayText":null,"Description":null,"Highlight":null,"Language":"\"copyRandomColorsToC3Array\": {\r\n\t\"list-name\": \"copyRandomColorsToC3Array\",\r\n\t\"display-text\": \"Copy random colors to {0}\",\r\n\t\"description\": \"Copy random colors to a C3Array\",\r\n\t\"params\": {\r\n        \"c3array\": {\r\n            \"name\": \"c3array\",\r\n            \"desc\": \"A C3 Array\"\r\n        }\r\n    }\r\n}\r\n","Code":"copyRandomColorsToC3Array(c3array)\r\n{\r\n\tlet arr = c3array.GetInstances()[0].GetSdkInstance();\r\n\tconst colors = this.lastColorsArray;\r\n\t\r\n\tarr.SetSize(colors.length, 1, 1);\r\n\t\r\n\tcolors.forEach(function(currentValue, index) {\r\n    \tarr.Set(index, 0, 0, currentValue.toString());\r\n\t});\r\n}\r\n","ListName":null,"Async":null,"C2Id":"","Deprecated":""},"applyrandomcolortosprite":{"Id":"applyrandomcolortosprite","Category":"c3 sprite","ScriptName":"Applyrandomcolortosprite","Ace":"{\r\n  \"id\": \"applyLastRandomColorToSprite\",\r\n  \"scriptName\": \"applyLastRandomColorToSprite\",\r\n  \"highlight\": false,\r\n  \"params\": [\r\n    {\r\n      \"id\": \"c3sprite\",\r\n      \"type\": \"object\",\r\n      \"allowedPluginIds\": [\r\n        \"Sprite\"\r\n      ]\r\n    },\r\n    {\r\n      \"id\": \"alpha\",\r\n      \"type\": \"boolean\",\r\n      \"initialValue\": \"true\"\r\n    }\r\n  ]\r\n}\r\n","DisplayText":null,"Description":null,"Highlight":null,"Language":"\"applyLastRandomColorToSprite\": {\r\n\t\"list-name\": \"applyLastRandomColorToSprite\",\r\n\t\"display-text\": \"Apply last random color to {0} (alpha = {1})\",\r\n\t\"description\": \"Apply last random color to a Sprite\",\r\n\t\"params\": {\r\n        \"c3sprite\": {\r\n            \"name\": \"c3sprite\",\r\n            \"desc\": \"Sprite\"\r\n        },\r\n        \"alpha\": {\r\n            \"name\": \"alpha\",\r\n            \"desc\": \"Apply the alpha (opacity)\"\r\n        }\r\n    }\r\n}\r\n","Code":"applyLastRandomColorToSprite(c3sprite, alpha)\r\n{\r\n\r\n\t//let spr = c3sprite.GetInstances()[0].GetSdkInstance();\r\n\tlet spr = c3sprite.GetFirstPicked().GetSdkInstance();\r\n\t\r\n    const c3color = convertColorToC3Color(this.lastFormat, this.lastColor);\r\n    const worldInfo = spr.GetWorldInfo();\r\n   \tworldInfo.GetUnpremultipliedColor().equalsIgnoringAlpha(c3color) || ( worldInfo.SetUnpremultipliedColor(c3color), spr._runtime.UpdateRender() );\r\n   \t\r\n   \tif (!!alpha) {\r\n\t    worldInfo.GetUnpremultipliedColor().getA() == c3color.getA() || ( worldInfo.SetOpacity(c3color.getA()), spr._runtime.UpdateRender() );\r\n    } \r\n}\r\n","ListName":null,"Async":null,"C2Id":"","Deprecated":""},"applyrandomcolortospritefromarray":{"Id":"applyrandomcolortospritefromarray","Category":"c3 sprite","ScriptName":"Applyrandomcolortospritefromarray","Ace":"{\r\n  \"id\": \"applyRandomColorToSpriteFromArray\",\r\n  \"scriptName\": \"applyRandomColorToSpriteFromArray\",\r\n  \"highlight\": false,\r\n  \"params\": [\r\n    {\r\n      \"id\": \"c3sprite\",\r\n      \"type\": \"object\",\r\n      \"allowedPluginIds\": [\r\n        \"Sprite\"\r\n      ]\r\n    },\r\n    {\r\n      \"id\": \"alpha\",\r\n      \"type\": \"boolean\",\r\n      \"initialValue\": \"true\"\r\n    },\r\n    {\r\n      \"id\": \"index\",\r\n      \"type\": \"number\",\r\n      \"initialValue\": \"0\"\r\n    }\r\n  ]\r\n}\r\n","DisplayText":null,"Description":null,"Highlight":null,"Language":"\"applyRandomColorToSpriteFromArray\": {\r\n    \"list-name\": \"applyRandomColorToSpriteFromArray\",\r\n    \"display-text\": \"Apply color to {0} (Alpha = {1}) from index {2} (last array)\",\r\n    \"description\": \"Apply random color to sprite from last array of random colors.\",\r\n    \"params\": {\r\n      \"c3sprite\": {\r\n        \"name\": \"c3sprite\",\r\n        \"desc\": \"Sprite\"\r\n      },\r\n      \"alpha\": {\r\n        \"name\": \"alpha\",\r\n        \"desc\": \"Apply the alpha (opacity)\"\r\n      },\r\n      \"index\": {\r\n            \"name\": \"Index\",\r\n            \"desc\": \"Index Array\"\r\n        }\r\n    }\r\n  }\r\n","Code":"applyRandomColorToSpriteFromArray(c3sprite, alpha, index)\r\n{\r\n\tlet i = index;\r\n\t\r\n\tif (i >= this.lastColorsArray.length) { i = this.lastColorsArray.length-1;}\r\n\tif (i < 0 ) { i = 0;}\r\n\r\n\t//let spr = c3sprite.GetInstances()[0].GetSdkInstance();\r\n\tlet spr = c3sprite.GetFirstPicked().GetSdkInstance();\r\n\t\r\n    const c3color = convertColorToC3Color(this.lastFormat, this.lastColorsArray[i]);\r\n    const worldInfo = spr.GetWorldInfo();\r\n   \tworldInfo.GetUnpremultipliedColor().equalsIgnoringAlpha(c3color) || ( worldInfo.SetUnpremultipliedColor(c3color), spr._runtime.UpdateRender() );\r\n   \t\r\n   \tif (!!alpha) {\r\n\t    worldInfo.GetUnpremultipliedColor().getA() == c3color.getA() || ( worldInfo.SetOpacity(c3color.getA()), spr._runtime.UpdateRender() );\r\n\t}\r\n}\r\n","ListName":null,"Async":null,"C2Id":"","Deprecated":""},"setpropertyluminosityviastring":{"Id":"setpropertyluminosityviastring","Category":"set properties","ScriptName":"Setpropertyluminosityviastring","Ace":"{\r\n  \"id\": \"setPropertyLuminosityViaString\",\r\n  \"scriptName\": \"setPropertyLuminosityViaString\",\r\n  \"highlight\": false,\r\n  \"params\": [\r\n    {\r\n      \"id\": \"luminosity\",\r\n      \"type\": \"string\",\r\n      \"initialValue\": \"random\"\r\n    }\r\n  ]\r\n}\r\n","DisplayText":null,"Description":null,"Highlight":null,"Language":"\"setPropertyLuminosityViaString\": {\r\n\t\"list-name\": \"setPropertyLuminosityViaString\",\r\n\t\"display-text\": \"Set the luminosity to {0}\",\r\n\t\"description\": \"Set the luminosity of the generated color.\",\r\n\t\"params\": {\r\n        \"luminosity\": {\r\n            \"name\": \"Luminosity\",\r\n            \"desc\": \"The luminosity of the generated color (random, bright, light, dark).\"\r\n        }\r\n    }\r\n}\r\n\r\n","Code":"setPropertyLuminosityViaString(luminosity)\r\n{\r\n\tthis.options.luminosity = luminosity.toLowerCase();\r\n}\r\n","ListName":null,"Async":null,"C2Id":"","Deprecated":""},"setpropertyformatviastring":{"Id":"setpropertyformatviastring","Category":"set properties","ScriptName":"Setpropertyformatviastring","Ace":"{\r\n  \"id\": \"setPropertyFormatViaString\",\r\n  \"scriptName\": \"setPropertyFormatViaString\",\r\n  \"highlight\": false,\r\n  \"params\": [\r\n    {\r\n      \"id\": \"format\",\r\n      \"type\": \"string\",\r\n      \"initialValue\": \"hex\"\r\n    }\r\n  ]\r\n}\r\n","DisplayText":null,"Description":null,"Highlight":null,"Language":"\"setPropertyFormatViaString\": {\r\n\t\"list-name\": \"setPropertyFormatViaString\",\r\n\t\"display-text\": \"Set the format to {0}\",\r\n\t\"description\": \"Set the format of the generated color.\",\r\n\t\"params\": {\r\n        \"format\": {\r\n            \"name\": \"Format\",\r\n            \"desc\": \"The luminosity of the generated color (rgb, rgba, rgbArray, hsl, hsla, hslArray, hex).\"\r\n        }\r\n    }\r\n}\r\n\r\n","Code":"setPropertyFormatViaString(format)\r\n{\r\n\tthis.options.format = format;\r\n\tthis.lastFormat = this.options.format;\r\n}\r\n","ListName":null,"Async":null,"C2Id":"","Deprecated":""}},"Conditions":{},"Expressions":{"getrandomcolor":{"Id":"getrandomcolor","Category":"one color","ScriptName":null,"IsVariadicParameters":null,"Ace":"{\r\n\t\"id\": \"getRandomColor\",\r\n\t\"expressionName\": \"getRandomColor\",\r\n\t\"returnType\": \"any\"\r\n}\r\n","TranslatedName":null,"Description":null,"ReturnType":null,"Language":"\"getRandomColor\": { \r\n\t\"translated-name\": \"getRandomColor\",\r\n\t\"description\": \"Returns a code for an attractive color\"\r\n}\r\n","Code":"getRandomColor()\r\n{\r\n\tthis.options.count = 1;\r\n\t\r\n\tlet constantSeed = null;\r\n\t\r\n\tif (this.options.hasOwnProperty(\"seed\") && !this.options.seed.replace(/\\s/g, '').length) {\r\n\t\tdelete this.options.seed;\r\n\t}  else {\r\n\t\tconstantSeed = this.options.seed;\r\n\t}\r\n\t\r\n\tconst color = randomColor(this.options);\r\n\tthis.lastColor = color[0];\r\n\tthis.lastColorsArray = color;\r\n\t\r\n\tthis.lastFormat = this.options.format;\r\n\t\r\n\tif (this.options.hasOwnProperty(\"seed\")) {\r\n\t\tthis.options.seed = constantSeed;\r\n\t}\r\n\t\r\n\treturn color[0];\r\n}\r\n","C2Id":"","Deprecated":""},"getlastcolor":{"Id":"getlastcolor","Category":"one color","ScriptName":null,"IsVariadicParameters":null,"Ace":"{\r\n\t\"id\": \"getLastColor\",\r\n\t\"expressionName\": \"getLastColor\",\r\n\t\"returnType\": \"any\"\r\n}\r\n","TranslatedName":null,"Description":null,"ReturnType":null,"Language":"\"getLastColor\": { \r\n\t\"translated-name\": \"getLastColor\",\r\n\t\"description\": \"Get the last random color.\"\r\n}\r\n","Code":"getLastColor()\r\n{\t\r\n\tconst color = this.lastColor;\r\n\treturn color;\r\n}\r\n","C2Id":"","Deprecated":""},"getrandomcolorarray":{"Id":"getrandomcolorarray","Category":"color array","ScriptName":null,"IsVariadicParameters":null,"Ace":"{\r\n\t\"id\": \"getRandomColorArray\",\r\n\t\"expressionName\": \"getRandomColorArray\",\r\n\t\"returnType\": \"any\"\r\n}\r\n","TranslatedName":null,"Description":null,"ReturnType":null,"Language":"\"getRandomColorArray\": { \r\n\t\"translated-name\": \"getRandomColorArray\",\r\n\t\"description\": \"Get an array of random colors (as String).\"\r\n}\r\n","Code":"getRandomColorArray()\r\n{\r\n\tthis.options.count = this.options.count <= 1 ? 1 : this.options.count;\r\n\t\r\n\tlet constantSeed = null;\r\n\t\r\n\tif (this.options.hasOwnProperty(\"seed\") && !this.options.seed.replace(/\\s/g, '').length) {\r\n\t\tdelete this.options.seed;\r\n\t} else {\r\n\t\tconstantSeed = this.options.seed;\r\n\t}\r\n\t\r\n\tconst colors = randomColor(this.options);\r\n\tthis.lastColor = colors[0];\r\n\tthis.lastColorsArray = colors;\r\n\t\r\n\tthis.lastFormat = this.options.format;\r\n\t\r\n\tif (this.options.hasOwnProperty(\"seed\")) {\r\n\t\tthis.options.seed = constantSeed;\r\n\t}\r\n\t\r\n\treturn colors.toString();\r\n}\r\n","C2Id":"","Deprecated":""},"getlastrandomcolorarray":{"Id":"getlastrandomcolorarray","Category":"color array","ScriptName":null,"IsVariadicParameters":null,"Ace":"{\r\n\t\"id\": \"getLastRandomColorArray\",\r\n\t\"expressionName\": \"getLastRandomColorArray\",\r\n\t\"returnType\": \"any\"\r\n}\r\n","TranslatedName":null,"Description":null,"ReturnType":null,"Language":"\"getLastRandomColorArray\": { \r\n\t\"translated-name\": \"getLastRandomColorArray\",\r\n\t\"description\": \"Get the last array of random colors (as String).\"\r\n}\r\n","Code":"getLastRandomColorArray()\r\n{\r\n\tconst colors = this.lastColorsArray;\r\n\treturn colors.toString();\r\n}\r\n","C2Id":"","Deprecated":""},"getcolorfromlastarray":{"Id":"getcolorfromlastarray","Category":"color array","ScriptName":null,"IsVariadicParameters":null,"Ace":"{\r\n  \"id\": \"getColorFromLastArray\",\r\n  \"expressionName\": \"getColorFromLastArray\",\r\n  \"returnType\": \"any\",\r\n  \"params\": [\r\n    {\r\n      \"id\": \"index\",\r\n      \"type\": \"number\",\r\n      \"initialValue\": \"0\"\r\n    }\r\n  ]\r\n}\r\n","TranslatedName":null,"Description":null,"ReturnType":null,"Language":"\"getColorFromLastArray\": { \r\n\t\"translated-name\": \"getColorFromLastArray\",\r\n\t\"description\": \"Get a color from last array of random colors.\",\r\n\t\"params\": {\r\n        \"index\": {\r\n            \"name\": \"Index\",\r\n            \"desc\": \"Index\"\r\n        }\r\n    }\r\n}\r\n","Code":"getColorFromLastArray(index)\r\n{\r\n\tconst colors = this.lastColorsArray;\r\n\treturn colors[index];\r\n}\r\n","C2Id":"","Deprecated":""},"getlengtharrayrandomcolor":{"Id":"getlengtharrayrandomcolor","Category":"color array","ScriptName":null,"IsVariadicParameters":null,"Ace":"{\r\n\t\"id\": \"getLengthArrayRandomColor\",\r\n\t\"expressionName\": \"getLengthArrayRandomColor\",\r\n\t\"returnType\": \"any\"\r\n}\r\n","TranslatedName":null,"Description":null,"ReturnType":null,"Language":"\"getLengthArrayRandomColor\": { \r\n\t\"translated-name\": \"getLengthArrayRandomColor\",\r\n\t\"description\": \"Get the length of array of random color\"\r\n}\r\n","Code":"getLengthArrayRandomColor()\r\n{\r\n\tconst colors = this.lastColorsArray;\r\n\treturn colors.length;\r\n}\r\n","C2Id":"","Deprecated":""},"getpropertyhue":{"Id":"getpropertyhue","Category":"get properties","ScriptName":null,"IsVariadicParameters":null,"Ace":"{\r\n\t\"id\": \"getPropertyHue\",\r\n\t\"expressionName\": \"getPropertyHue\",\r\n\t\"returnType\": \"any\"\r\n}\r\n","TranslatedName":null,"Description":null,"ReturnType":null,"Language":"\"getPropertyHue\": { \r\n\t\"translated-name\": \"getPropertyHue\",\r\n\t\"description\": \"Get the Hue (property)\"\r\n}\r\n","Code":"getPropertyHue()\r\n{\r\n\treturn this.options.hue;\r\n}\r\n","C2Id":"","Deprecated":""},"getpropertyluminosity":{"Id":"getpropertyluminosity","Category":"get properties","ScriptName":null,"IsVariadicParameters":null,"Ace":"{\r\n\t\"id\": \"getPropertyLuminosity\",\r\n\t\"expressionName\": \"getPropertyLuminosity\",\r\n\t\"returnType\": \"any\"\r\n}\r\n","TranslatedName":null,"Description":null,"ReturnType":null,"Language":"\"getPropertyLuminosity\": { \r\n\t\"translated-name\": \"getPropertyLuminosity\",\r\n\t\"description\": \"Get the Luminosity (property)\"\r\n}\r\n","Code":"getPropertyLuminosity()\r\n{\r\n\treturn this.options.luminosity;\r\n}\r\n","C2Id":"","Deprecated":""},"getpropertycount":{"Id":"getpropertycount","Category":"get properties","ScriptName":null,"IsVariadicParameters":null,"Ace":"{\r\n\t\"id\": \"getPropertyCount\",\r\n\t\"expressionName\": \"getPropertyCount\",\r\n\t\"returnType\": \"number\"\r\n}\r\n","TranslatedName":null,"Description":null,"ReturnType":null,"Language":"\"getPropertyCount\": { \r\n\t\"translated-name\": \"getPropertyCount\",\r\n\t\"description\": \"Get the Count (property)\"\r\n}\r\n","Code":"getPropertyCount()\r\n{\r\n\treturn this.options.count;\r\n}\r\n","C2Id":"","Deprecated":""},"getpropertyseed":{"Id":"getpropertyseed","Category":"get properties","ScriptName":null,"IsVariadicParameters":null,"Ace":"{\r\n\t\"id\": \"getPropertySeed\",\r\n\t\"expressionName\": \"getPropertySeed\",\r\n\t\"returnType\": \"any\"\r\n}\r\n","TranslatedName":null,"Description":null,"ReturnType":null,"Language":"\"getPropertySeed\": { \r\n\t\"translated-name\": \"getPropertySeed\",\r\n\t\"description\": \"Get the Seed (property)\"\r\n}\r\n","Code":"getPropertySeed()\r\n{\r\n\treturn this.options.seed;\r\n}\r\n","C2Id":"","Deprecated":""},"getpropertyformat":{"Id":"getpropertyformat","Category":"get properties","ScriptName":null,"IsVariadicParameters":null,"Ace":"{\r\n\t\"id\": \"getPropertyFormat\",\r\n\t\"expressionName\": \"getPropertyFormat\",\r\n\t\"returnType\": \"any\"\r\n}\r\n","TranslatedName":null,"Description":null,"ReturnType":null,"Language":"\"getPropertyFormat\": { \r\n\t\"translated-name\": \"getPropertyFormat\",\r\n\t\"description\": \"Get the Hue (property)\"\r\n}\r\n","Code":"getPropertyFormat()\r\n{\r\n\treturn this.options.format;\r\n}\r\n","C2Id":"","Deprecated":""},"getpropertyalpha":{"Id":"getpropertyalpha","Category":"get properties","ScriptName":null,"IsVariadicParameters":null,"Ace":"{\r\n\t\"id\": \"getPropertyAlpha\",\r\n\t\"expressionName\": \"getPropertyAlpha\",\r\n\t\"returnType\": \"number\"\r\n}\r\n","TranslatedName":null,"Description":null,"ReturnType":null,"Language":"\"getPropertyAlpha\": { \r\n\t\"translated-name\": \"getPropertyAlpha\",\r\n\t\"description\": \"Get the Alpha (property)\"\r\n}\r\n","Code":"getPropertyAlpha()\r\n{\r\n\treturn this.options.alpha;\r\n}\r\n","C2Id":"","Deprecated":""}},"ThirdPartyFiles":{"randomColor.js":{"FileName":"randomColor.js","Content":"// randomColor by David Merfield under the CC0 license\r\n// https://github.com/davidmerfield/randomColor/\r\n\r\n;\r\n(function(root, factory)\r\n{\r\n\r\n    // Support CommonJS\r\n    if (typeof exports === 'object')\r\n    {\r\n        var randomColor = factory();\r\n\r\n        // Support NodeJS & Component, which allow module.exports to be a function\r\n        if (typeof module === 'object' && module && module.exports)\r\n        {\r\n            exports = module.exports = randomColor;\r\n        }\r\n\r\n        // Support CommonJS 1.1.1 spec\r\n        exports.randomColor = randomColor;\r\n\r\n        // Support AMD\r\n    }\r\n    else if (typeof define === 'function' && define.amd)\r\n    {\r\n        define([], factory);\r\n\r\n        // Support vanilla script loading\r\n    }\r\n    else\r\n    {\r\n        root.randomColor = factory();\r\n    }\r\n\r\n}(this, function()\r\n{\r\n\r\n    // Seed to get repeatable colors\r\n    var seed = null;\r\n\r\n    // Shared color dictionary\r\n    var colorDictionary = {};\r\n\r\n    // Populate the color dictionary\r\n    loadColorBounds();\r\n\r\n    // check if a range is taken\r\n    var colorRanges = [];\r\n\r\n    var randomColor = function(options)\r\n    {\r\n\r\n        options = options || {};\r\n\r\n        // Check if there is a seed and ensure it's an\r\n        // integer. Otherwise, reset the seed value.\r\n        if (options.seed !== undefined && options.seed !== null && options.seed === parseInt(options.seed, 10))\r\n        {\r\n            seed = options.seed;\r\n\r\n            // A string was passed as a seed\r\n        }\r\n        else if (typeof options.seed === 'string')\r\n        {\r\n            seed = stringToInteger(options.seed);\r\n\r\n            // Something was passed as a seed but it wasn't an integer or string\r\n        }\r\n        else if (options.seed !== undefined && options.seed !== null)\r\n        {\r\n            throw new TypeError('The seed value must be an integer or string');\r\n\r\n            // No seed, reset the value outside.\r\n        }\r\n        else\r\n        {\r\n            seed = null;\r\n        }\r\n\r\n        var H, S, B;\r\n\r\n        // Check if we need to generate multiple colors\r\n        if (options.count !== null && options.count !== undefined)\r\n        {\r\n\r\n            var totalColors = options.count,\r\n                colors = [];\r\n            // Value false at index i means the range i is not taken yet.\r\n            for (var i = 0; i < options.count; i++)\r\n            {\r\n                colorRanges.push(false)\r\n            }\r\n            options.count = null;\r\n\r\n            while (totalColors > colors.length)\r\n            {\r\n\r\n                // Since we're generating multiple colors,\r\n                // incremement the seed. Otherwise we'd just\r\n                // generate the same color each time...\r\n                if (seed && options.seed) options.seed += 1;\r\n\r\n                colors.push(randomColor(options));\r\n            }\r\n\r\n            options.count = totalColors;\r\n\r\n            return colors;\r\n        }\r\n\r\n        // First we pick a hue (H)\r\n        H = pickHue(options);\r\n\r\n        // Then use H to determine saturation (S)\r\n        S = pickSaturation(H, options);\r\n\r\n        // Then use S and H to determine brightness (B).\r\n        B = pickBrightness(H, S, options);\r\n\r\n        // Then we return the HSB color in the desired format\r\n        return setFormat([H, S, B], options);\r\n    };\r\n\r\n    function pickHue(options)\r\n    {\r\n        if (colorRanges.length > 0)\r\n        {\r\n            var hueRange = getRealHueRange(options.hue)\r\n\r\n            var hue = randomWithin(hueRange)\r\n\r\n            //Each of colorRanges.length ranges has a length equal approximatelly one step\r\n            var step = (hueRange[1] - hueRange[0]) / colorRanges.length\r\n\r\n            var j = parseInt((hue - hueRange[0]) / step)\r\n\r\n            //Check if the range j is taken\r\n            if (colorRanges[j] === true)\r\n            {\r\n                j = (j + 2) % colorRanges.length\r\n            }\r\n            else\r\n            {\r\n                colorRanges[j] = true\r\n            }\r\n\r\n            var min = (hueRange[0] + j * step) % 359,\r\n                max = (hueRange[0] + (j + 1) * step) % 359;\r\n\r\n            hueRange = [min, max]\r\n\r\n            hue = randomWithin(hueRange)\r\n\r\n            if (hue < 0)\r\n            {\r\n                hue = 360 + hue;\r\n            }\r\n            return hue\r\n        }\r\n        else\r\n        {\r\n            var hueRange = getHueRange(options.hue)\r\n\r\n            hue = randomWithin(hueRange);\r\n            // Instead of storing red as two seperate ranges,\r\n            // we group them, using negative numbers\r\n            if (hue < 0)\r\n            {\r\n                hue = 360 + hue;\r\n            }\r\n\r\n            return hue;\r\n        }\r\n    }\r\n\r\n    function pickSaturation(hue, options)\r\n    {\r\n\r\n        if (options.hue === 'monochrome')\r\n        {\r\n            return 0;\r\n        }\r\n\r\n        if (options.luminosity === 'random')\r\n        {\r\n            return randomWithin([0, 100]);\r\n        }\r\n\r\n        var saturationRange = getSaturationRange(hue);\r\n\r\n        var sMin = saturationRange[0],\r\n            sMax = saturationRange[1];\r\n\r\n        switch (options.luminosity)\r\n        {\r\n\r\n            case 'bright':\r\n                sMin = 55;\r\n                break;\r\n\r\n            case 'dark':\r\n                sMin = sMax - 10;\r\n                break;\r\n\r\n            case 'light':\r\n                sMax = 55;\r\n                break;\r\n        }\r\n\r\n        return randomWithin([sMin, sMax]);\r\n\r\n    }\r\n\r\n    function pickBrightness(H, S, options)\r\n    {\r\n\r\n        var bMin = getMinimumBrightness(H, S),\r\n            bMax = 100;\r\n\r\n        switch (options.luminosity)\r\n        {\r\n\r\n            case 'dark':\r\n                bMax = bMin + 20;\r\n                break;\r\n\r\n            case 'light':\r\n                bMin = (bMax + bMin) / 2;\r\n                break;\r\n\r\n            case 'random':\r\n                bMin = 0;\r\n                bMax = 100;\r\n                break;\r\n        }\r\n\r\n        return randomWithin([bMin, bMax]);\r\n    }\r\n\r\n    function setFormat(hsv, options)\r\n    {\r\n\r\n        switch (options.format)\r\n        {\r\n\r\n            case 'hsvArray':\r\n                return hsv;\r\n\r\n            case 'hslArray':\r\n                return HSVtoHSL(hsv);\r\n\r\n            case 'hsl':\r\n                var hsl = HSVtoHSL(hsv);\r\n                return 'hsl(' + hsl[0] + ', ' + hsl[1] + '%, ' + hsl[2] + '%)';\r\n\r\n            case 'hsla':\r\n                var hslColor = HSVtoHSL(hsv);\r\n                var alpha = options.alpha || Math.random();\r\n                return 'hsla(' + hslColor[0] + ', ' + hslColor[1] + '%, ' + hslColor[2] + '%, ' + alpha + ')';\r\n\r\n            case 'rgbArray':\r\n                return HSVtoRGB(hsv);\r\n\r\n            case 'rgb':\r\n                var rgb = HSVtoRGB(hsv);\r\n                return 'rgb(' + rgb.join(', ') + ')';\r\n\r\n            case 'rgba':\r\n                var rgbColor = HSVtoRGB(hsv);\r\n                var alpha = options.alpha || Math.random();\r\n                return 'rgba(' + rgbColor.join(', ') + ', ' + alpha + ')';\r\n\r\n            default:\r\n                return HSVtoHex(hsv);\r\n        }\r\n\r\n    }\r\n\r\n    function getMinimumBrightness(H, S)\r\n    {\r\n\r\n        var lowerBounds = getColorInfo(H).lowerBounds;\r\n\r\n        for (var i = 0; i < lowerBounds.length - 1; i++)\r\n        {\r\n\r\n            var s1 = lowerBounds[i][0],\r\n                v1 = lowerBounds[i][1];\r\n\r\n            var s2 = lowerBounds[i + 1][0],\r\n                v2 = lowerBounds[i + 1][1];\r\n\r\n            if (S >= s1 && S <= s2)\r\n            {\r\n\r\n                var m = (v2 - v1) / (s2 - s1),\r\n                    b = v1 - m * s1;\r\n\r\n                return m * S + b;\r\n            }\r\n\r\n        }\r\n\r\n        return 0;\r\n    }\r\n\r\n    function getHueRange(colorInput)\r\n    {\r\n\r\n        if (typeof parseInt(colorInput) === 'number')\r\n        {\r\n\r\n            var number = parseInt(colorInput);\r\n\r\n            if (number < 360 && number > 0)\r\n            {\r\n                return [number, number];\r\n            }\r\n\r\n        }\r\n\r\n        if (typeof colorInput === 'string')\r\n        {\r\n\r\n            if (colorDictionary[colorInput])\r\n            {\r\n                var color = colorDictionary[colorInput];\r\n                if (color.hueRange)\r\n                {\r\n                    return color.hueRange;\r\n                }\r\n            }\r\n            else if (colorInput.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i))\r\n            {\r\n                var hue = HexToHSB(colorInput)[0];\r\n                return [hue, hue];\r\n            }\r\n        }\r\n\r\n        return [0, 360];\r\n\r\n    }\r\n\r\n    function getSaturationRange(hue)\r\n    {\r\n        return getColorInfo(hue).saturationRange;\r\n    }\r\n\r\n    function getColorInfo(hue)\r\n    {\r\n\r\n        // Maps red colors to make picking hue easier\r\n        if (hue >= 334 && hue <= 360)\r\n        {\r\n            hue -= 360;\r\n        }\r\n\r\n        for (var colorName in colorDictionary)\r\n        {\r\n            var color = colorDictionary[colorName];\r\n            if (color.hueRange &&\r\n                hue >= color.hueRange[0] &&\r\n                hue <= color.hueRange[1])\r\n            {\r\n                return colorDictionary[colorName];\r\n            }\r\n        }\r\n        return 'Color not found';\r\n    }\r\n\r\n    function randomWithin(range)\r\n    {\r\n        if (seed === null)\r\n        {\r\n            //generate random evenly destinct number from : https://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/\r\n            var golden_ratio = 0.618033988749895\r\n            var r = Math.random()\r\n            r += golden_ratio\r\n            r %= 1\r\n            return Math.floor(range[0] + r * (range[1] + 1 - range[0]));\r\n        }\r\n        else\r\n        {\r\n            //Seeded random algorithm from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\r\n            var max = range[1] || 1;\r\n            var min = range[0] || 0;\r\n            seed = (seed * 9301 + 49297) % 233280;\r\n            var rnd = seed / 233280.0;\r\n            return Math.floor(min + rnd * (max - min));\r\n        }\r\n    }\r\n\r\n    function HSVtoHex(hsv)\r\n    {\r\n\r\n        var rgb = HSVtoRGB(hsv);\r\n\r\n        function componentToHex(c)\r\n        {\r\n            var hex = c.toString(16);\r\n            return hex.length == 1 ? '0' + hex : hex;\r\n        }\r\n\r\n        var hex = '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\r\n\r\n        return hex;\r\n\r\n    }\r\n\r\n    function defineColor(name, hueRange, lowerBounds)\r\n    {\r\n\r\n        var sMin = lowerBounds[0][0],\r\n            sMax = lowerBounds[lowerBounds.length - 1][0],\r\n\r\n            bMin = lowerBounds[lowerBounds.length - 1][1],\r\n            bMax = lowerBounds[0][1];\r\n\r\n        colorDictionary[name] = {\r\n            hueRange: hueRange,\r\n            lowerBounds: lowerBounds,\r\n            saturationRange: [sMin, sMax],\r\n            brightnessRange: [bMin, bMax]\r\n        };\r\n\r\n    }\r\n\r\n    function loadColorBounds()\r\n    {\r\n\r\n        defineColor(\r\n            'monochrome',\r\n        null, [[0, 0], [100, 0]]);\r\n\r\n        defineColor(\r\n            'red', [-26, 18], [[20, 100], [30, 92], [40, 89], [50, 85], [60, 78], [70, 70], [80, 60], [90, 55], [100, 50]]);\r\n\r\n        defineColor(\r\n            'orange', [19, 46], [[20, 100], [30, 93], [40, 88], [50, 86], [60, 85], [70, 70], [100, 70]]);\r\n\r\n        defineColor(\r\n            'yellow', [47, 62], [[25, 100], [40, 94], [50, 89], [60, 86], [70, 84], [80, 82], [90, 80], [100, 75]]);\r\n\r\n        defineColor(\r\n            'green', [63, 178], [[30, 100], [40, 90], [50, 85], [60, 81], [70, 74], [80, 64], [90, 50], [100, 40]]);\r\n\r\n        defineColor(\r\n            'blue', [179, 257], [[20, 100], [30, 86], [40, 80], [50, 74], [60, 60], [70, 52], [80, 44], [90, 39], [100, 35]]);\r\n\r\n        defineColor(\r\n            'purple', [258, 282], [[20, 100], [30, 87], [40, 79], [50, 70], [60, 65], [70, 59], [80, 52], [90, 45], [100, 42]]);\r\n\r\n        defineColor(\r\n            'pink', [283, 334], [[20, 100], [30, 90], [40, 86], [60, 84], [80, 80], [90, 75], [100, 73]]);\r\n\r\n    }\r\n\r\n    function HSVtoRGB(hsv)\r\n    {\r\n\r\n        // this doesn't work for the values of 0 and 360\r\n        // here's the hacky fix\r\n        var h = hsv[0];\r\n        if (h === 0)\r\n        {\r\n            h = 1;\r\n        }\r\n        if (h === 360)\r\n        {\r\n            h = 359;\r\n        }\r\n\r\n        // Rebase the h,s,v values\r\n        h = h / 360;\r\n        var s = hsv[1] / 100,\r\n            v = hsv[2] / 100;\r\n\r\n        var h_i = Math.floor(h * 6),\r\n            f = h * 6 - h_i,\r\n            p = v * (1 - s),\r\n            q = v * (1 - f * s),\r\n            t = v * (1 - (1 - f) * s),\r\n            r = 256,\r\n            g = 256,\r\n            b = 256;\r\n\r\n        switch (h_i)\r\n        {\r\n            case 0:\r\n                r = v;\r\n                g = t;\r\n                b = p;\r\n                break;\r\n            case 1:\r\n                r = q;\r\n                g = v;\r\n                b = p;\r\n                break;\r\n            case 2:\r\n                r = p;\r\n                g = v;\r\n                b = t;\r\n                break;\r\n            case 3:\r\n                r = p;\r\n                g = q;\r\n                b = v;\r\n                break;\r\n            case 4:\r\n                r = t;\r\n                g = p;\r\n                b = v;\r\n                break;\r\n            case 5:\r\n                r = v;\r\n                g = p;\r\n                b = q;\r\n                break;\r\n        }\r\n\r\n        var result = [Math.floor(r * 255), Math.floor(g * 255), Math.floor(b * 255)];\r\n        return result;\r\n    }\r\n\r\n    function HexToHSB(hex)\r\n    {\r\n        hex = hex.replace(/^#/, '');\r\n        hex = hex.length === 3 ? hex.replace(/(.)/g, '$1$1') : hex;\r\n\r\n        var red = parseInt(hex.substr(0, 2), 16) / 255,\r\n            green = parseInt(hex.substr(2, 2), 16) / 255,\r\n            blue = parseInt(hex.substr(4, 2), 16) / 255;\r\n\r\n        var cMax = Math.max(red, green, blue),\r\n            delta = cMax - Math.min(red, green, blue),\r\n            saturation = cMax ? (delta / cMax) : 0;\r\n\r\n        switch (cMax)\r\n        {\r\n            case red:\r\n                return [60 * (((green - blue) / delta) % 6) || 0, saturation, cMax];\r\n            case green:\r\n                return [60 * (((blue - red) / delta) + 2) || 0, saturation, cMax];\r\n            case blue:\r\n                return [60 * (((red - green) / delta) + 4) || 0, saturation, cMax];\r\n        }\r\n    }\r\n\r\n    function HSVtoHSL(hsv)\r\n    {\r\n        var h = hsv[0],\r\n            s = hsv[1] / 100,\r\n            v = hsv[2] / 100,\r\n            k = (2 - s) * v;\r\n\r\n        return [\r\n        h,\r\n        Math.round(s * v / (k < 1 ? k : 2 - k) * 10000) / 100,\r\n        k / 2 * 100];\r\n    }\r\n\r\n    function stringToInteger(string)\r\n    {\r\n        var total = 0\r\n        for (var i = 0; i !== string.length; i++)\r\n        {\r\n            if (total >= Number.MAX_SAFE_INTEGER) break;\r\n            total += string.charCodeAt(i)\r\n        }\r\n        return total\r\n    }\r\n\r\n    // get The range of given hue when options.count!=0\r\n\r\n    function getRealHueRange(colorHue)\r\n    {\r\n        if (!isNaN(colorHue))\r\n        {\r\n            var number = parseInt(colorHue);\r\n\r\n            if (number < 360 && number > 0)\r\n            {\r\n                return getColorInfo(colorHue).hueRange\r\n            }\r\n        }\r\n        else if (typeof colorHue === 'string')\r\n        {\r\n\r\n            if (colorDictionary[colorHue])\r\n            {\r\n                var color = colorDictionary[colorHue];\r\n\r\n                if (color.hueRange)\r\n                {\r\n                    return color.hueRange\r\n                }\r\n            }\r\n            else if (colorHue.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i))\r\n            {\r\n                var hue = HexToHSB(colorHue)[0]\r\n                return getColorInfo(hue).hueRange\r\n            }\r\n        }\r\n\r\n        return [0, 360]\r\n    }\r\n    return randomColor;\r\n}));\r\n","PluginTemplate":"this._info.AddFileDependency(\r\n{\r\n    filename: \"c3runtime/randomColor.js\",\r\n    type: \"inline-script\"\r\n});\r\n","Bytes":"","Extention":".js","C3Folder":true,"C2Folder":false,"Rootfolder":false,"MimeType":"application/x-javascript","FileType":"inline-script"},"randomColor_Utility.js":{"FileName":"randomColor_Utility.js","Content":"// converti un numero rappresentante il formato del colore in una stringa\r\n\r\nfunction getComboFormat(n)\r\n{\r\n    /*[\"rgb\", \"rgba\", \"rgbArray\", \"hsl\", \"hsla\", \"hslArray\", \"hex\"]*/\r\n    switch (n)\r\n    {\r\n        case 0:\r\n            return \"rgb\";\r\n            break;\r\n        case 1:\r\n            return \"rgba\";\r\n            break;\r\n        case 2:\r\n            return \"rgbArray\";\r\n            break;\r\n        case 3:\r\n            return \"hsl\";\r\n            break;\r\n        case 4:\r\n            return \"hsla\";\r\n            break;\r\n        case 5:\r\n            return \"hslArray\";\r\n            break;\r\n        case 6:\r\n            return \"hex\";\r\n            break;\r\n        default:\r\n            return \"hex\";\r\n            break;\r\n    }\r\n}\r\n\r\n// converti un numero rappresentante la luminosità in una stringa\r\n\r\nfunction getComboLuminosity(n)\r\n{\r\n    /*[\"random\", \"bright\", \"light\", \"dark\"]*/\r\n    switch (n)\r\n    {\r\n        case 0:\r\n            return \"random\";\r\n            break;\r\n        case 1:\r\n            return \"bright\";\r\n            break;\r\n        case 2:\r\n            return \"light\";\r\n            break;\r\n        case 3:\r\n            return \"dark\";\r\n            break;\r\n        default:\r\n            return \"random\";\r\n            break;\r\n    }\r\n}\r\n\r\n// converti una stringa in un colore C3\r\n\r\nfunction convertColorToC3Color(format, color)\r\n{\r\n    let c3color = new C3.Color;\r\n\r\n    let r = 255;\r\n    let g = 255;\r\n    let b = 255;\r\n    let a = 1;\r\n\r\n    if (format == \"hex\")\r\n    {\r\n        let tempC = hexToRgb(color);\r\n        r = tempC.r;\r\n        g = tempC.g;\r\n        b = tempC.b;\r\n    }\r\n    else if (format == \"rgb\")\r\n    {\r\n        let tempC = rgbToRgb(color);\r\n        r = tempC.r;\r\n        g = tempC.g;\r\n        b = tempC.b;\r\n    }\r\n    else if (format == \"rgba\")\r\n    {\r\n        let tempC = rgbaToRgba(color);\r\n        r = tempC.r;\r\n        g = tempC.g;\r\n        b = tempC.b;\r\n        a = tempC.a;\r\n    }\r\n    else if (format == \"rgbArray\")\r\n    {\r\n        r = color[0];\r\n        g = color[1];\r\n        b = color[2];\r\n    }\r\n    else if (format == \"hsl\")\r\n    {\r\n        let tempC = HSLstringToRGB(color);\r\n        r = tempC.r;\r\n        g = tempC.g;\r\n        b = tempC.b;\r\n    }\r\n    else if (format == \"hslArray\")\r\n    {\r\n        let tempC = HSLToRGB(color[0], color[1], color[2]);\r\n        r = tempC.r;\r\n        g = tempC.g;\r\n        b = tempC.b;\r\n    }\r\n    else if (format == \"hsla\")\r\n    {\r\n        let tempC = HSLAToRGBA(color);\r\n        r = tempC.r;\r\n        g = tempC.g;\r\n        b = tempC.b;\r\n        a = tempC.a;\r\n    }\r\n\r\n    c3color.setRgba(r / 255, g / 255, b / 255, a);\r\n    return c3color;\r\n}\r\n\r\n\r\nfunction hexToRgb(hex)\r\n{\r\n    // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\r\n    var shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n    hex = hex.replace(shorthandRegex, function(m, r, g, b)\r\n    {\r\n        return r + r + g + g + b + b;\r\n    });\r\n\r\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n    return result ? {\r\n        r: parseInt(result[1], 16),\r\n        g: parseInt(result[2], 16),\r\n        b: parseInt(result[3], 16)\r\n    } : null;\r\n}\r\n\r\nfunction rgbToRgb(rgb)\r\n{\r\n    const result = rgb.substring(4, rgb.length - 1)\r\n        .replace(/ /g, '')\r\n        .split(',');\r\n    return {\r\n        r: parseInt(result[0]),\r\n        g: parseInt(result[1]),\r\n        b: parseInt(result[2]),\r\n        a: 1\r\n    }\r\n}\r\n\r\nfunction rgbaToRgba(rgba)\r\n{\r\n    //console.log(rgba);\r\n    const result = rgba.substring(5, rgba.length - 1)\r\n        .replace(/ /g, '')\r\n        .split(',');\r\n    //console.log(result);\r\n    return {\r\n        r: parseInt(result[0]),\r\n        g: parseInt(result[1]),\r\n        b: parseInt(result[2]),\r\n        a: parseFloat(result[3])\r\n    }\r\n}\r\n\r\nfunction HSLstringToRGB(hsl)\r\n{\r\n    let sep = hsl.indexOf(\",\") > -1 ? \",\" : \" \";\r\n    hsl = hsl.substr(4).split(\")\")[0].split(sep);\r\n\r\n    let h = hsl[0],\r\n    s = hsl[1].substr(0, hsl[1].length - 1) / 100,\r\n    l = hsl[2].substr(0, hsl[2].length - 1) / 100;\r\n\r\n    // Strip label and convert to degrees (if necessary)\r\n    if (h.indexOf(\"deg\") > -1) h = h.substr(0, h.length - 3);\r\n    else if (h.indexOf(\"rad\") > -1) h = Math.round(h.substr(0, h.length - 3) * (180 / Math.PI));\r\n    else if (h.indexOf(\"turn\") > -1) h = Math.round(h.substr(0, h.length - 4) * 360);\r\n    // Keep hue fraction of 360 if ending up over\r\n    if (h >= 360) h %= 360;\r\n\r\n    let c = (1 - Math.abs(2 * l - 1)) * s,\r\n    x = c * (1 - Math.abs((h / 60) % 2 - 1)),\r\n    m = l - c / 2,\r\n    r = 0,\r\n    g = 0,\r\n    b = 0;\r\n    if (0 <= h && h < 60)\r\n    {\r\n        r = c;\r\n        g = x;\r\n        b = 0;\r\n    }\r\n    else if (60 <= h && h < 120)\r\n    {\r\n        r = x;\r\n        g = c;\r\n        b = 0;\r\n    }\r\n    else if (120 <= h && h < 180)\r\n    {\r\n        r = 0;\r\n        g = c;\r\n        b = x;\r\n    }\r\n    else if (180 <= h && h < 240)\r\n    {\r\n        r = 0;\r\n        g = x;\r\n        b = c;\r\n    }\r\n    else if (240 <= h && h < 300)\r\n    {\r\n        r = x;\r\n        g = 0;\r\n        b = c;\r\n    }\r\n    else if (300 <= h && h < 360)\r\n    {\r\n        r = c;\r\n        g = 0;\r\n        b = x;\r\n    }\r\n    r = Math.round((r + m) * 255);\r\n    g = Math.round((g + m) * 255);\r\n    b = Math.round((b + m) * 255);\r\n\r\n    return {\r\n        r: r,\r\n        g: g,\r\n        b: b\r\n    }\r\n}\r\n\r\nfunction HSLToRGB(h, s, l)\r\n{\r\n    // Must be fractions of 1\r\n    s /= 100;\r\n    l /= 100;\r\n\r\n    let c = (1 - Math.abs(2 * l - 1)) * s,\r\n    x = c * (1 - Math.abs((h / 60) % 2 - 1)),\r\n    m = l - c / 2,\r\n    r = 0,\r\n    g = 0,\r\n    b = 0;\r\n\r\n    if (0 <= h && h < 60)\r\n    {\r\n        r = c;\r\n        g = x;\r\n        b = 0;\r\n    }\r\n    else if (60 <= h && h < 120)\r\n    {\r\n        r = x;\r\n        g = c;\r\n        b = 0;\r\n    }\r\n    else if (120 <= h && h < 180)\r\n    {\r\n        r = 0;\r\n        g = c;\r\n        b = x;\r\n    }\r\n    else if (180 <= h && h < 240)\r\n    {\r\n        r = 0;\r\n        g = x;\r\n        b = c;\r\n    }\r\n    else if (240 <= h && h < 300)\r\n    {\r\n        r = x;\r\n        g = 0;\r\n        b = c;\r\n    }\r\n    else if (300 <= h && h < 360)\r\n    {\r\n        r = c;\r\n        g = 0;\r\n        b = x;\r\n    }\r\n    r = Math.round((r + m) * 255);\r\n    g = Math.round((g + m) * 255);\r\n    b = Math.round((b + m) * 255);\r\n\r\n    return {\r\n        r: r,\r\n        g: g,\r\n        b: b\r\n    }\r\n}\r\n\r\nfunction HSLAToRGBA(hsla)\r\n{\r\n    let sep = hsla.indexOf(\",\") > -1 ? \",\" : \" \";\r\n    hsla = hsla.substr(5).split(\")\")[0].split(sep);\r\n\r\n    if (hsla.indexOf(\"/\") > -1) hsla.splice(3, 1);\r\n\r\n    let h = hsla[0],\r\n    s = hsla[1].substr(0, hsla[1].length - 1) / 100,\r\n    l = hsla[2].substr(0, hsla[2].length - 1) / 100,\r\n    a = hsla[3];\r\n\r\n    if (h.indexOf(\"deg\") > -1) h = h.substr(0, h.length - 3);\r\n    else if (h.indexOf(\"rad\") > -1) h = Math.round(h.substr(0, h.length - 3) * (180 / Math.PI));\r\n    else if (h.indexOf(\"turn\") > -1) h = Math.round(h.substr(0, h.length - 4) * 360);\r\n    if (h >= 360) h %= 360;\r\n\r\n    let c = (1 - Math.abs(2 * l - 1)) * s,\r\n    x = c * (1 - Math.abs((h / 60) % 2 - 1)),\r\n    m = l - c / 2,\r\n    r = 0,\r\n    g = 0,\r\n    b = 0;\r\n    if (0 <= h && h < 60)\r\n    {\r\n        r = c;\r\n        g = x;\r\n        b = 0;\r\n    }\r\n    else if (60 <= h && h < 120)\r\n    {\r\n        r = x;\r\n        g = c;\r\n        b = 0;\r\n    }\r\n    else if (120 <= h && h < 180)\r\n    {\r\n        r = 0;\r\n        g = c;\r\n        b = x;\r\n    }\r\n    else if (180 <= h && h < 240)\r\n    {\r\n        r = 0;\r\n        g = x;\r\n        b = c;\r\n    }\r\n    else if (240 <= h && h < 300)\r\n    {\r\n        r = x;\r\n        g = 0;\r\n        b = c;\r\n    }\r\n    else if (300 <= h && h < 360)\r\n    {\r\n        r = c;\r\n        g = 0;\r\n        b = x;\r\n    }\r\n    r = Math.round((r + m) * 255);\r\n    g = Math.round((g + m) * 255);\r\n    b = Math.round((b + m) * 255);\r\n\r\n    return {\r\n        r: r,\r\n        g: g,\r\n        b: b,\r\n        a: a\r\n    }\r\n\r\n}\r\n","PluginTemplate":"this._info.AddFileDependency(\r\n{\r\n    filename: \"c3runtime/randomColor_Utility.js\",\r\n    type: \"inline-script\"\r\n});\r\n","Bytes":"","Extention":".js","C3Folder":true,"C2Folder":false,"Rootfolder":false,"MimeType":"application/x-javascript","FileType":"inline-script"},"utility.js":{"FileName":"utility.js","Content":"// vuoto\r\n","PluginTemplate":"this._info.AddFileDependency(\r\n{\r\n    filename: \"c3runtime/utility.js\",\r\n    type: \"inline-script\"\r\n});\r\n","Bytes":"Ly8gdnVvdG8=","Extention":".js","C3Folder":true,"C2Folder":false,"Rootfolder":false,"MimeType":"application/x-javascript","FileType":"inline-script"}},"C2RunTime":""}